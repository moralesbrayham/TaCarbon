/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.util.List;
import org.example.service.VentaService;
import org.example.service.ReporteService;
import org.example.model.Venta;
import org.springframework.beans.factory.annotation.Autowired;



/**
 *
 * @author moral
 */
public class Estadisticas extends javax.swing.JFrame {

    /**
     * Creates new form Estadisticas
     */
    @Autowired
    private VentaService ventaService;
    
    @Autowired
    private ReporteService reporteService;
    
    public Estadisticas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        opcionesCombo = new javax.swing.JComboBox<>();
        metodosCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultadosTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Punto de venta TaCarbon - Estadisticas y Reportes");

        jLabel1.setFont(new java.awt.Font("Yu Gothic Medium", 1, 24)); // NOI18N
        jLabel1.setText("ESTADISTICAS Y REPORTES");

        jLabel2.setFont(new java.awt.Font("Yu Gothic Light", 1, 14)); // NOI18N
        jLabel2.setText("Elige una operación");

        opcionesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ventas", "Estadísticas" }));
        opcionesCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionesComboActionPerformed(evt);
            }
        });

        metodosCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodosComboActionPerformed(evt);
            }
        });

        resultadosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(resultadosTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(opcionesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(metodosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opcionesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metodosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcionesComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionesComboActionPerformed
        // TODO add your handling code here:
        String seleccion = (String) opcionesCombo.getSelectedItem();
    metodosCombo.removeAllItems();

    if ("Ventas".equals(seleccion)) {
        metodosCombo.addItem("Obtener Todas las Ventas");
        metodosCombo.addItem("Obtener Venta por ID");
        metodosCombo.addItem("Eliminar Venta");
    } else if ("Estadísticas".equals(seleccion)) {
        metodosCombo.addItem("Obtener Ventas por Fecha");
        metodosCombo.addItem("Obtener Productos Más Vendidos");
        metodosCombo.addItem("Obtener Ingresos por Período");
    }
    }//GEN-LAST:event_opcionesComboActionPerformed

    private void metodosComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodosComboActionPerformed
        // TODO add your handling code here:
        String seleccion = (String) opcionesCombo.getSelectedItem();
    String metodoSeleccionado = (String) metodosCombo.getSelectedItem();

    if (seleccion == null || metodoSeleccionado == null) return;
    

    DefaultTableModel tableModel = new DefaultTableModel();
    resultadosTable.setModel(tableModel);

    if ("Ventas".equals(seleccion)) {
        if ("Obtener Todas las Ventas".equals(metodoSeleccionado)) {
            List<Venta> ventas = ventaService.obtenerTodasLasVentas();
            tableModel.addColumn("ID");
            tableModel.addColumn("Fecha");
            tableModel.addColumn("Total");

            for (Venta v : ventas) {
                tableModel.addRow(new Object[]{v.getId(), v.getFecha(), v.getTotal()});
            }
            
        } else if ("Obtener Venta por ID".equals(metodoSeleccionado)) {
            String id = JOptionPane.showInputDialog("Ingrese el ID de la venta:");
            try {
                Long ventaId = Long.parseLong(id);
                ventaService.obtenerVentaPorId(ventaId).ifPresent(v -> {
                    tableModel.addColumn("ID");
                    tableModel.addColumn("Fecha");
                    tableModel.addColumn("Total");
                    tableModel.addRow(new Object[]{v.getId(), v.getFecha(), v.getTotal()});
                });
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID inválido.");
            }
        } else if ("Eliminar Venta".equals(metodoSeleccionado)) {
            String id = JOptionPane.showInputDialog("Ingrese el ID de la venta a eliminar:");
            try {
                Long ventaId = Long.parseLong(id);
                ventaService.eliminarVenta(ventaId);
                JOptionPane.showMessageDialog(this, "Venta eliminada exitosamente.");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID inválido.");
            }
        }
    } else if ("Estadísticas".equals(seleccion)) {
        if ("Obtener Ventas por Fecha".equals(metodoSeleccionado)) {
            String fechaStr = JOptionPane.showInputDialog("Ingrese la fecha (YYYY-MM-DD):");
            LocalDate fecha = LocalDate.parse(fechaStr);
            List<Venta> ventas = reporteService.obtenerVentasPorFecha(fecha);

            tableModel.addColumn("ID");
            tableModel.addColumn("Fecha");
            tableModel.addColumn("Total");

            for (Venta v : ventas) {
                tableModel.addRow(new Object[]{v.getId(), v.getFecha(), v.getTotal()});
            }
        } else if ("Obtener Productos Más Vendidos".equals(metodoSeleccionado)) {
            List<Object[]> productos = reporteService.obtenerProductosMasVendidos();
            tableModel.addColumn("Producto");
            tableModel.addColumn("Cantidad Vendida");

            for (Object[] p : productos) {
                tableModel.addRow(new Object[]{p[0], p[1]});
            }
        } else if ("Obtener Ingresos por Período".equals(metodoSeleccionado)) {
            String inicio = JOptionPane.showInputDialog("Ingrese la fecha de inicio (YYYY-MM-DD):");
            String fin = JOptionPane.showInputDialog("Ingrese la fecha de fin (YYYY-MM-DD):");

            LocalDate fechaInicio = LocalDate.parse(inicio);
            LocalDate fechaFin = LocalDate.parse(fin);
            Double ingresos = reporteService.obtenerIngresosPorPeriodo(fechaInicio, fechaFin);
            tableModel.addColumn("Total Ingresos");
            tableModel.addRow(new Object[]{ingresos});
        }
          
    }
    
    tableModel.fireTableDataChanged();
    
    }//GEN-LAST:event_metodosComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estadisticas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> metodosCombo;
    private javax.swing.JComboBox<String> opcionesCombo;
    private javax.swing.JTable resultadosTable;
    // End of variables declaration//GEN-END:variables
}
